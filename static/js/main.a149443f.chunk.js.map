{"version":3,"sources":["components/Card.js","components/MakeQuote.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","className","style","fontSize","this","props","author","quote","onClick","newQuote","Component","MakeQuote","name","resize","onChange","formFucn","type","placeholder","wordWrap","data","button","reset","getRandomInt","min","max","Math","ceil","floor","random","index","App","resetButton","setState","yourQuote","state","getNext","bind","getFormValue","onFormPress","fetch","then","res","json","text","buttonIndex","console","log","event","target","value","preventDefault","length","textAlign","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a149443f.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport React from 'react';\r\n\r\n// import tailwindcss from \"tailwindcss\";\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mw5 mw7-ns center bg-light-blue pa3 ph5-ns br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <h1   className=\"font-bold antialiased\" style={{fontSize: '30px'}}>{this.props.author}</h1>\r\n                <div>\r\n                    <p className=\"i fw8\">{this.props.quote}</p>\r\n                    <button onClick={this.props.newQuote} className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-3\">Next Quote</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Card;\r\n\r\n\r\n// bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5","import React from 'react';\r\n\r\nconst MakeQuote = (props) => {\r\n    return(\r\n        <div className=\"mw5 mw7-ns center bg-light-purple pa4 ph5-ns br3 pa3 ma4 grow bw2 shadow-5\">\r\n            <h1 className=\"tc underline\">Quote Maker</h1>\r\n            <form>\r\n                <label>\r\n                    <textarea className=\"ma3\" name=\"text\" style={{resize: 'vertical'}}  onChange={props.formFucn} type=\"text\" placeholder=\"Type Your Quote\"/> \r\n                </label>\r\n                \r\n            </form>\r\n            <div>\r\n                <h1>Your Quote:</h1>\r\n                <p style={{ wordWrap: 'break-word' }} className=\"i fw8 lh-copy\">{props.data}</p>\r\n                <button className=\"f6 link dim ph3 pv2 mb2 dib white bg-green br4 mr3\" type=\"button\" onClick={props.button}>Add Quotation Mark</button>\r\n                <button onClick={props.reset} className=\"f6 link dim ph3 pv2 mb2 dib white bg-red br4 ml3\" type=\"reset\">Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MakeQuote;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Card from '../components/Card';\r\nimport React from 'react';\r\nimport MakeQuote from '../components/MakeQuote';\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nlet index = getRandomInt(0, 1000)\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      quote : [],\r\n      author: [],\r\n      yourQuote : 'None',\r\n    };\r\n    this.getNext = this.getNext.bind(this)\r\n    this.getFormValue = this.getFormValue.bind(this);\r\n    this.onFormPress = this.onFormPress.bind(this);\r\n    this.resetButton = this.resetButton.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://type.fit/api/quotes')\r\n    .then(res => res.json())\r\n    .then(data => this.setState({quote : data[index].text, author : data[index].author}))\r\n  }\r\n\r\n  getNext() {\r\n    let buttonIndex = getRandomInt(100, 1000)\r\n    fetch('https://type.fit/api/quotes')\r\n    .then(res => res.json())\r\n    .then(data => this.setState({quote : data[buttonIndex].text, author : data[buttonIndex].author}))\r\n    console.log(1)\r\n  }\r\n\r\n  getFormValue(event) {\r\n    this.setState({yourQuote : event.target.value})\r\n  }\r\n\r\n  onFormPress(event) {\r\n    const { yourQuote } = this.state;\r\n    this.setState({yourQuote : `\"${yourQuote}\"`})\r\n    event.preventDefault()\r\n  }\r\n\r\n  resetButton = () => {\r\n    this.setState({yourQuote : 'None'})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { quote, author } = this.state;\r\n    if (!quote.length) {\r\n      return (\r\n        <div>\r\n          <h1 style={{textAlign : 'center'}}>Loading</h1>\r\n        </div>\r\n      )\r\n    } else {\r\n        return (\r\n        <div>\r\n          <h1 className=\"f1 ttu tracked mt0 underline\" style={{textAlign : 'center'}}>Quote Generator</h1>\r\n          <Card quote={quote} author={author} newQuote={this.getNext}/>\r\n          <MakeQuote formFucn={this.getFormValue} button={this.onFormPress} data={this.state.yourQuote} reset={this.resetButton}/>\r\n            <footer className=\"pv4 ph3 ph5-m ph6-l mid-gray underline\">\r\n              <small className=\"f6 db tc\">Â© 2021 <b className=\"ttu\">Haider Ali</b>., All Rights Reserved</small>\r\n            </footer>\r\n        </div>\r\n        \r\n    \r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//https://api.chucknorris.io/jokes/random\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport 'tachyons';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}